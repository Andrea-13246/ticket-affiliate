name: AutoPost Telegram Events

on:
  schedule:
    - cron: '0 * * * *'  # ogni ora
  workflow_dispatch:

jobs:
  send_event:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq curl

      - name: Send latest event to Telegram
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKE }}
          CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          set -euo pipefail

          FILE="events.json"
          if [ ! -f "$FILE" ]; then
            echo "File $FILE non trovato!"
            exit 1
          fi

          EVENT=$(jq -r '.[0]' "$FILE")
          TITLE=$(echo "$EVENT" | jq -r '.title // ""')
          CITY=$(echo "$EVENT" | jq -r '.city // ""')
          VENUE=$(echo "$EVENT" | jq -r '.venue // ""')
          DATE=$(echo "$EVENT" | jq -r '.date // ""')
          PRICE=$(echo "$EVENT" | jq -r '.price // ""')
          URL=$(echo "$EVENT" | jq -r '.url // ""')
          AFF=$(echo "$EVENT" | jq -r '.affid // ""')
          IMAGE=$(echo "$EVENT" | jq -r '.image // ""')

          if [ -z "$IMAGE" ]; then
            echo "IMAGE vuoto! Controlla events.json"
            exit 1
          fi

          FINAL_URL="$URL"
          if [ -n "$AFF" ]; then
            FINAL_URL="${URL}?aff=${AFF}"
          fi

          echo "Invio evento: $TITLE"

          CAPTION=$(cat <<EOF
Evento: $TITLE
📍 $CITY — $VENUE
🗓️ $DATE
💶 Prezzo: €$PRICE
🎟️ Acquista: $FINAL_URL
EOF
)

          # invia foto e salva risposta per debug
          curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendPhoto" \
            -F chat_id="${CHAT_ID}" \
            -F photo="${IMAGE}" \
            -F caption="${CAPTION}" \
            -F parse_mode="HTML" \
            -o /tmp/telegram_response.json

          echo "=== Telegram response ==="
          cat /tmp/telegram_response.json
